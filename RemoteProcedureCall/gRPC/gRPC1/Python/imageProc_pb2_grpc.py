# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import imageProc_pb2 as imageProc__pb2


class ImageProcStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Enhancement = channel.unary_unary(
        '/imageProc.ImageProc/Enhancement',
        request_serializer=imageProc__pb2.EnhancementRequest.SerializeToString,
        response_deserializer=imageProc__pb2.EnhancementReply.FromString,
        )


class ImageProcServicer(object):

  def Enhancement(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ImageProcServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Enhancement': grpc.unary_unary_rpc_method_handler(
          servicer.Enhancement,
          request_deserializer=imageProc__pb2.EnhancementRequest.FromString,
          response_serializer=imageProc__pb2.EnhancementReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'imageProc.ImageProc', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
